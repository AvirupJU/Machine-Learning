# -*- coding: utf-8 -*-
"""AppleStockPrices.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RHEZEtQokPEFa_LnO5UcSOUvK90XKOL_
"""

from google.colab import files
uploaded = files.upload()



#We'll be using support vector regression for prediction.
import csv # one can choose to use psandas if the datset is too large, but in this case, it will suffice
from sklearn.svm import SVR
import numpy as np
import matplotlib.pyplot as plt

dates=[]
prices=[]

def get_data(filename):
  with open(filename, 'r') as csvfile:
    csvFileReader= csv.reader(csvfile)
    next(csvFileReader) # 1st first row is just the headings
    for row in csvFileReader:
      dates.append(int(row[0].split('-')[0]))
      prices.append(float(row[1]))
  return

def predict_prices(dates,prices,x):
  dates= np.reshape(dates,(len(dates),1))# converting the dates list to an NX1 matrix for training
  svr_lin = SVR(kernel='linear', C=1e3) # fits a straight line with C has the error margin
  svr_poly = SVR(kernel='polynomial',C=1e3,degree=2)
  svr_rbf = SVR(kernel='rbf',C=1e3,gamma=0.1)
  svr_rbf.fit(dates, prices) # fitting the data points in the models
  svr_lin.fit(dates, prices)
  svr_poly.fit(dates, prices)

  #let's plot
  plt.scatter(dates,prices,color='black',label="Data")
  plt.plot(dates,svr_lin.predict(dates),color='red',label="Linear")
  plt.plot(dates,svr_poly.predict(dates),color='blue',label="Quadratic")
  plt.plot(dates,svr_rbf.predict(dates),color='green',label="RBF")
  plt.xlabel('Dates')
  plt.ylabel('Prices')
  plt.title('SVR Models')
  plt.legend()
  plt.show()

  return svr_lin.predict(x)[0],svr_poly.predict(x)[0],svr_rbf.predict(x)[0]


get_data('aapl.csv')
predictedprice =predict_price(dates,prices,29)
print(predictedprice)